{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Option","Select","RadioGroup","Radio","Group","FormItem","Form","Item","AppFrom","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","returnUuid","len","radix","i","r","chars","split","uuid","length","Math","random","join","remove","k","form","keys","getFieldValue","setFieldsValue","filter","key","add","nextKeys","concat","handleChange","value","pervState","state","currentState","assign","objectSpread","selectValue","setState","defineProperty","formatvalue","values","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","selectKey","err","return","handleSubmit","e","preventDefault","validateFields","console","log","_this2","_this$props$form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","formItems","map","index","react_default","a","createElement","className","label","required","validateTrigger","rules","message","es_select","showSearch","style","width","placeholder","optionFilterProp","onChange","bind","filterOption","input","option","children","toLowerCase","indexOf","whitespace","input_number","min","max","name","es_radio","es_checkbox","es_button","type","onClick","icon","es_form","onSubmit","htmlType","Component","App","create","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2feb9d1a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Form,\n  Input,\n  Icon,\n  Button,\n  Select,\n  InputNumber,\n  Radio,\n  Checkbox\n} from 'antd';\n\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\nconst FormItem = Form.Item;\n\nclass AppFrom extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {}\n  }\n\n  //  返回一个UUID作为key\n  returnUuid = (len, radix) => {\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    let uuid = [],\n      i;\n    radix = radix || chars.length;\n\n    if (len) {\n      for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\n    } else {\n      let r;\n      uuid[14] = '4';\n      for (i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n          r = 0 | Math.random() * 16;\n          uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n        }\n      }\n    }\n    return uuid.join('');\n  }\n\n  //  删除一个key，即是删除一个组合\n  remove = (k) => {\n    const { form } = this.props;\n    const keys = form.getFieldValue('keys');\n    if (keys.length === 1) {\n      return;\n    }\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  }\n\n  // 增加一个key，即是增加一个组合\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(this.returnUuid());\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  }\n\n  //  下拉选择联动\n  handleChange = (key, value) => {\n    let pervState = this.state[key];\n    let currentState = Object.assign({ ...pervState }, {\n      selectValue: value\n    })\n    this.setState({\n      [key]: currentState,\n    })\n  }\n\n  componentDidMount() {\n    this.add();\n  }\n\n\n  formatvalue = (values) => {\n    let data = [];\n    for (let k of values['keys']) {\n      switch (values['selects'][k]) {\n        case 'A':\n          data.push({\n            selectKey: values['selects'][k],\n            value: values['inputs'][k],\n          });\n          break;\n        case 'B':\n          data.push({\n            selectKey: values['selects'][k],\n            value: values['inputNumbers'][k],\n          });\n          break;\n        case 'C':\n          data.push({\n            selectKey: values['selects'][k],\n            value: values['radioNumbers'][k],\n          });\n          break;\n        case 'D':\n          data.push({\n            selectKey: values['selects'][k],\n            value: values['checkLetters'][k],\n          });\n          break;\n        default:\n          break;\n      }\n    }\n    return data;\n  }\n  //  提交数据\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('提交的值', this.formatvalue(values));\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: { span: 24, offset: 0 },\n        sm: { span: 20, offset: 4 },\n      },\n    };\n    getFieldDecorator('keys', { initialValue: [] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => (\n      <div key={k} className=\"group\">\n        <FormItem\n          {...(formItemLayout)}\n          label='选择值'\n          required={true}\n        >\n          {getFieldDecorator(`selects[${k}]`, {\n            validateTrigger: ['onChange', 'onBlur'],\n            rules: [{\n              required: true,\n              message: \"请选择一个值\",\n            }],\n          })(\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"请选择一个值\"\n              optionFilterProp=\"children\"\n              onChange={this.handleChange.bind(this, k)}\n              filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n              <Option value=\"A\">A</Option>\n              <Option value=\"B\">B</Option>\n              <Option value=\"C\">C</Option>\n              <Option value=\"D\">D</Option>\n            </Select>\n          )}\n        </FormItem>\n        {k && this.state[k] && this.state[k].selectValue && this.state[k].selectValue === 'A' && <FormItem\n          {...(formItemLayout)}\n          label='输入值'\n          required={true}\n        >\n          {getFieldDecorator(`inputs[${k}]`, {\n            rules: [{\n              required: true,\n              whitespace: true,\n              message: \"请输入一个值\",\n            }],\n          })(\n            <Input style={{ width: 200 }} placeholder=\"请输入一个值\" />\n          )}\n        </FormItem>}\n\n        {k && this.state[k] && this.state[k].selectValue && this.state[k].selectValue === 'B' && <FormItem\n          {...(formItemLayout)}\n          label='输入数字'\n          required={true}\n        >\n          {getFieldDecorator(`inputNumbers[${k}]`, {\n            rules: [{\n              required: true,\n              message: \"请输入一个数字值\",\n            }],\n          })(\n            <InputNumber min={1} max={10} style={{ width: 200 }} placeholder=\"请输入一个数字值\" />\n          )}\n        </FormItem>}\n\n        {k && this.state[k] && this.state[k].selectValue && this.state[k].selectValue === 'C' && <FormItem\n          {...(formItemLayout)}\n          label='单选数字'\n          required={true}\n        >\n          {getFieldDecorator(`radioNumbers[${k}]`, {\n            rules: [{\n              required: true,\n              message: \"请选择一个数字\",\n            }],\n          })(\n            <RadioGroup name=\"radiogroup\">\n              <Radio value={1}>1</Radio>\n              <Radio value={2}>2</Radio>\n              <Radio value={3}>3</Radio>\n              <Radio value={4}>4</Radio>\n            </RadioGroup>\n          )}\n        </FormItem>}\n\n        {k && this.state[k] && this.state[k].selectValue && this.state[k].selectValue === 'D' && <FormItem\n          {...(formItemLayout)}\n          label='多选字母'\n          required={true}\n        >\n          {getFieldDecorator(`checkLetters[${k}]`, {\n            rules: [{\n              required: true,\n              message: \"请选择一个或多个字母\",\n            }],\n          })(\n            <Checkbox.Group style={{ width: '100%' }}>\n              <Checkbox value=\"A\">A</Checkbox>\n              <Checkbox value=\"B\">B</Checkbox>\n              <Checkbox value=\"C\">C</Checkbox>\n              <Checkbox value=\"D\">D</Checkbox>\n            </Checkbox.Group>\n          )}\n        </FormItem>}\n\n        {keys.length > 1 ? (\n          <FormItem {...formItemLayoutWithOutLabel}>\n            <Button type=\"danger\" onClick={() => this.remove(k)}>\n              <Icon type=\"minus\" /> 删除\n         </Button>\n          </FormItem>\n        ) : null}\n\n      </div>\n    ));\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {formItems}\n        <FormItem {...formItemLayoutWithOutLabel}>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: 200 }}>\n            <Icon type=\"plus\" /> 增加\n          </Button>\n        </FormItem>\n        <FormItem {...formItemLayoutWithOutLabel}>\n          <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst App = Form.create()(AppFrom);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}